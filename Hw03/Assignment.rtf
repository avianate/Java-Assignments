{\rtf1\mac\ansicpg10000\uc1\deff0 {\fonttbl{\f0\froman\fcharset1 Nimbus Rom{\*\falt Nimbus Rom};}{\f1\froman\fcharset1 Nimbus Rom{\*\falt Nimbus Rom};}{\f2\fmodern\fcharset1 Nimbus Mon{\*\falt Nimbus Mon};}{\f3\fswiss\fcharset1 CMM I{\*\falt CMM I};}{\f4\fswiss\fcharset1 CMS Y{\*\falt CMS Y};}{\f5\fswiss\fcharset1 CM R{\*\falt CM R};}{\f6\fswiss\fcharset1 Nimbus Rom{\*\falt Nimbus Rom};}}{\colortbl\red0\green0\blue0;}{\stylesheet{\s0\f0\fs24\cf0\sbasedon222\snext0\ql Default;}{\s1\sl428\slmult0\sbasedon0\snext0 CM1;}{\s2\sbasedon0\snext0 CM2;}{\s3\sbasedon0\snext0 CM12;}{\s4\sl338\slmult0\sbasedon0\snext0 CM3;}{\s5\sl338\slmult0\sbasedon0\snext0 CM4;}{\s6\sbasedon0\snext0 CM13;}{\s7\sbasedon0\snext0 CM14;}{\s8\sl338\slmult0\sbasedon0\snext0 CM5;}{\s9\sbasedon0\snext0 CM15;}{\s10\sl338\slmult0\sbasedon0\snext0 CM6;}{\s11\sl338\slmult0\sbasedon0\snext0 CM7;}{\s12\sl338\slmult0\sbasedon0\snext0 CM8;}{\s13\sl340\slmult0\sbasedon0\snext0 CM9;}{\s14\sbasedon0\snext0 CM16;}}{\*\listtable {\list\listtemplateid2029861324 \listhybrid{\listlevel\levelstartat1\levelold0\levelnfc23\levelnfcn23\levelfollow0{\leveltext\'01\'a5 ?;}{\levelnumbers}}\listid1629579916}{\list\listtemplateid2893086671 \listhybrid{\listlevel\levelstartat1\levelold0\levelnfc0\levelnfcn0\levelfollow0{\leveltext\'02\'00.}{\levelnumbers\'01;}}\listid1223263712}}{\*\listoverridetable {\listoverride\listid1629579916\listoverridecount0\ls1}{\listoverride\listid1223263712\listoverridecount0\ls2}}{\*\generator Adobe Acrobat Exchange-Pro 9.5.5}{\info{\creatim\yr2012\mo9\dy19\hr12\min26\sec11}{\revtim\yr2012\mo9\dy19\hr12\min26\sec11}{\id3221215784}}\pard\plain\ql\f0\fs24\cf0 \paperh15840\paperw12240\margt1859\margb685\margr1247\margl1404\pard\s1\qc\sl428\slmult0\fs28 Homewor\fs28 k \fs28 3 \fs28 Linke\fs28 d \fs28 list\fs28 , \fs28 stack\fs28 , \fs28 queu\fs28 e \ulnone\strike0\par\pard\s1\sa607\qc\sl428\slmult0\fs28\f1 CS5060 IntensiveProgramming,Fall201\fs28 2 \fs21 85point\fs21 s \fs21 Due: 3:59pmSeptember 26,201\fs21 2 \ulnone\strike0\pghsxn16340\pgwsxn12240\margtsxn2359\margbsxn685\margrsxn1247\marglsxn1404\par\'20\pard\par\pard\s2\s3\sa240\qj\fs28\f0 Linke\fs28 d \fs28 list\fs28 , \fs28 stack\fs28 , \fs28 queu\fs28 e \fs28 (4\fs28 0 \fs28 pts)\fs28 . \ulnone\strike0\par\pard\s4\qj\sl338\slmult0\fs21\f1 Implement a singly-linked list and use it to solve the following problems. Your \fs21\f2 MyLinkedLis\fs21 t \fs21\f1 class should implement the \fs21\f2 LinkedLis\fs21 t \fs21\f1 interface availableintheFilessection onCanvas. \ulnone\strike0\par\pard\s5\sa432\fi337\qj\sl338\slmult0\fs21 Note: All input must be read from the standard input stream, and all output must be written to the standard output stream. For this assignment, assume the input is correct. \ulnone\strike0\par\pard\plain\pghsxn16340\pgwsxn12240\margtsxn2359\margbsxn685\margrsxn1247\marglsxn1404\par\'20\pard\par\pard\s2\s3\sa240\qj\fs28 Proble\fs28 m \fs28 0a\fs28 : \fs28 Stac\fs28 k \ulnone\strike0\par\pard\s4\s6\sa315\qj\sl338\slmult0\fs21\f1 Implement a linked list based stack using your singly-linked list implementation. Your \fs21\f2 MyStac\fs21 k \fs21\f1 class should implement the \fs21\f2 Stac\fs21 k \fs21\f1 interface availableintheFilessection onCanvas. \ulnone\strike0\par\pard\s4\s6\sa315\qj\sl338\slmult0\fs21\f0 Input\fs21 : \fs21\f1 The input begins with the number \fs21\f3 t \fs21\f1 of test casesin a singleline(\fs21\f3 t \fs21\f4 \u8804 \'B2 \fs21\f5 100\fs21\f1 ). Each of the next \fs21\f3 t \fs21\f1 lines starts with a number \fs21\f3 n \fs21\f1 (\fs21\f5 1 \fs21\f4 \u8804 \'B2 \fs21\f3 n \fs21\f4 \u8804 \'B2 \fs21\f5 1000\fs21\f1 ) followed by a list of \fs21\f3 n \fs21\f1 operations. There are two types of operations: push and pop. A push operation is represented by a string \ldblquote \fs21\f2 push\fs21\f1 \rdblquote  followed by a number \fs21\f3 m \fs21\f1 (\fs21\f5 1 \fs21\f4 \u8804 \'B2 \fs21\f3 m \fs21\f4 \u8804 \'B2 \fs21\f5 1000000\fs21\f1 )topushintothestack.Apop operationisrepresentedby astring \ldblquote \fs21\f2 pop\fs21\f1 \rdblquote . \ulnone\strike0\par\pard\s4\s6\sa315\qj\sl338\slmult0\fs21\f0 Output\fs21 : \fs21\f1 For each test case output the elements in the stack after all the operations have been performed. Consecutive elements should be separated by a single space. \ulnone\strike0\par\pard\s4\s6\sa315\qj\sl338\slmult0\fs21\f0 Example\fs21 : \ulnone\strike0\par\pard\s4\s7\sa92\qj\sl338\slmult0\fs21 Input\fs21 : \ulnone\strike0\par\pard\s6\sa315\ri3600\sl338\slmult0\fs21\f2 2 \fs21 4 \fs21 pus\fs21 h \fs21 5 \fs21 pus\fs21 h \fs21 0 \fs21 pus\fs21 h \fs21 6 \fs21 pus\fs21 h \fs21 0 \fs21 7 \fs21 pus\fs21 h \fs21 1 \fs21 pus\fs21 h \fs21 2 \fs21 po\fs21 p \fs21 pus\fs21 h \fs21 3 \fs21 pus\fs21 h \fs21 4 \fs21 po\fs21 p \fs21 pus\fs21 h \fs21 5 \ulnone\strike0\par\pard\s4\s7\sa92\qj\sl338\slmult0\fs21\f0 Output\fs21 : \ulnone\strike0\par\pard\ri8442\qj\sl340\slmult0\fs21\f2 506\fs21 0 \fs21 13\fs21 5 \ulnone\strike0\par\pard\s8\s6\pagebb\sa315\sl338\slmult0\fs21\f1 Implement a linked list based queue using your singly-linked list implementation. Your \fs21\f2 MyQueu\fs21 e \fs21\f1 class should implement the \fs21\f2 Queu\fs21 e \fs21\f1 interface availableintheFilessection onCanvas. \ulnone\strike0\par\pard\s8\s6\sa315\sl338\slmult0\fs21\f0 Input\fs21 : \fs21\f1 The input begins with the number \fs21\f3 t \fs21\f1 of test casesin a singleline(\fs21\f3 t \fs21\f4 \u8804 \'B2 \fs21\f5 100\fs21\f1 ). Each of the next \fs21\f3 t \fs21\f1 lines starts with a number \fs21\f3 n \fs21\f1 (\fs21\f5 1 \fs21\f4 \u8804 \'B2 \fs21\f3 n \fs21\f4 \u8804 \'B2 \fs21\f5 1000\fs21\f1 ) followed by a list of \fs21\f3 n \fs21\f1 operations. There are two types of operations: enqueue and dequeue. An enqueue operation is represented by a string \ldblquote \fs21\f2 enq\fs21\f1 \rdblquote  followed by a number \fs21\f3 m \fs21\f1 (\fs21\f5 1 \fs21\f4 \u8804 \'B2 \fs21\f3 m \fs21\f4 \u8804 \'B2 \fs21\f5 1000000\fs21\f1 )toputintothequeue.Adequeueoperationisrepresentedby astring \ldblquote \fs21\f2 deq\fs21\f1 \rdblquote . \ulnone\strike0\par\pard\s8\s6\sa315\sl338\slmult0\fs21\f0 Output\fs21 : \fs21\f1 Foreach test caseoutputthe elementsinthequeue after all theoperationshavebeenperformed. Consecutive elements should be separated by a single space. \ulnone\strike0\par\pard\s8\s6\sa315\sl338\slmult0\fs21\f0 Example\fs21 : \ulnone\strike0\par\pard\s8\s9\sa167\sl338\slmult0\fs21 Input\fs21 : \ulnone\strike0\par\pard\s10\s6\sa315\ri4247\sl338\slmult0\fs21\f2 2 \fs21 4 \fs21 en\fs21 q \fs21 5 \fs21 en\fs21 q \fs21 0 \fs21 en\fs21 q \fs21 6 \fs21 en\fs21 q \fs21 0 \fs21 7 \fs21 en\fs21 q \fs21 1 \fs21 en\fs21 q \fs21 2 \fs21 de\fs21 q \fs21 en\fs21 q \fs21 3 \fs21 en\fs21 q \fs21 4 \fs21 de\fs21 q \fs21 en\fs21 q \fs21 5 \ulnone\strike0\par\pard\s8\s9\sa167\sl338\slmult0\fs21\f0 Output\fs21 : \ulnone\strike0\par\pard\s11\s6\sa315\ri8440\sl338\slmult0\fs21\f2 506\fs21 0 \fs21 34\fs21 5 \ulnone\strike0\par\pard\s8\sl338\slmult0\fs21\f0 Grading\fs21 : \fs21\f1 Thelinkedlistisworth10pts.Thestack and thequeue areworth15pts each(ifyoudon\rquote t use the linked listyouget 5pts only). \ulnone\strike0\par\pard\s12\s9\sa167\fi337\sl338\slmult0\fs21 For eachdata structure, make sureyou usetheinterface name whendeclaringinstances(notthe class name).Forexample,youshould write: \ulnone\strike0\par\pard\s10\s9\sa167\ri4247\sl338\slmult0\fs21\f2 LinkedLis\fs21 t \fs21 myLis\fs21 t \fs21 = \fs21 ne\fs21 w \fs21 MyLinkedList()\fs21 ; \fs21 Stac\fs21 k \fs21 myStac\fs21 k \fs21 = \fs21 ne\fs21 w \fs21 MyStack()\fs21 ; \fs21 Queu\fs21 e \fs21 myQueu\fs21 e \fs21 = \fs21 ne\fs21 w \fs21 MyQueue()\fs21 ; \ulnone\strike0\par\pard\s8\sl338\slmult0\fs21\f1 Thisisworth2pointsineach case. \ulnone\strike0\par\pard\s12\fi337\sl338\slmult0\fs21 For each data structure you should use the \fs21\f2 toString(\fs21 ) \fs21\f1 method to output the result. This is worth 2 pts in each case. \ulnone\strike0\par\pard\s4\pagebb\qj\sl338\slmult0\fs21 Each problem is worth 10 points. All of the problems can be solved by using a linked list, a stack, or a queue. There are5extrapointsfor solving theproblems using thedata structures implementedinproblem0 (1point for eachproblemplus 1extrapoint ifyou use the data structures for all theproblems). \ulnone\strike0\par\pard\s5\fi337\qj\sl338\slmult0\fs21 Note: All input must be read from the standard input stream, and all output must be written to the standard output stream. For this assignment, assume the input is correct. \ulnone\strike0\par\pard\s8\s6\pagebb\sa315\sl338\slmult0\fs21 There are \fs21\f3 n \fs21\f1 people, numbered \fs21\f5 1\fs21\f3 , \fs21\f5 2\fs21\f3 , \fs21 ...\fs21 , \fs21 n\fs21\f1 ,in a circle. At each step, \fs21\f3 m \fs21\f1 people are skipped and the nextperson is executed, until thereis only oneperson remaining. HelpJosephus determine theposition wherehe should beintosavehislife.Youcanread moreaboutthisproblem at {\field{\*\fldinst {HYPERLINK "http://en.wikipedia.org/wiki/Josephus_problem"}}{\fldrslt {\fs21\f2 http://en.wikipedia.org/wiki/Josephus_problem\fs21\f1 . }}}\ulnone\strike0\par\pard\s8\s6\sa315\sl338\slmult0\fs21\f0 Input\fs21 : \fs21\f1 Theinput begins with the number \fs21\f3 t \fs21\f1 of test cases in a single line(\fs21\f3 t \fs21\f4 \u8804 \'B2 \fs21\f5 100\fs21\f1 ). Eachof the next \fs21\f3 t \fs21\f1 lines hastwo numbers: the number ofpeople \fs21\f3 n \fs21\f1 (\fs21\f5 1 \fs21\f4 \u8804 \'B2 \fs21\f3 n \fs21\f4 \u8804 \'B2 \fs21\f5 1000\fs21\f1 )and the number ofpeople \fs21\f3 k \fs21\f1 (\fs21\f5 1 \fs21\f4 \u8804 \'B2 \fs21\f3 k \fs21\f4 \u8804 \'B2 \fs21\f5 1000\fs21\f1 )to skip at each step. \ulnone\strike0\par\pard\s8\s6\sa315\sl338\slmult0\fs21\f0 Output\fs21 : \fs21\f1 Foreach test caseoutputtheposition whereJosephus shouldbeintosavehislife. \ulnone\strike0\par\pard\s8\s6\sa315\sl338\slmult0\fs21\f0 Example\fs21 : \ulnone\strike0\par\pard\s8\s9\sa167\sl338\slmult0\fs21 Input\fs21 : \ulnone\strike0\par\pard\s13\s6\sa315\ri8960\sl340\slmult0\fs21\f2 2 \fs21 5\fs21 1 \fs21 5\fs21 2 \ulnone\strike0\par\pard\s8\s9\sa167\sl338\slmult0\fs21\f0 Output\fs21 : \ulnone\strike0\par\pard\ri9225\sl338\slmult0\fs21\f2 3 \fs21 4 \ulnone\strike0\par\pard\s3\pagebb\sa240\fs21\f1 A string \fs21\f3 S \fs21\f1 consisting ofparenthesis \fs21\f2 (\fs21 ) \fs21\f1 and square brackets \fs21\f2 [\fs21 ] \fs21\f1 isbalanced if: \ulnone\strike0\par\pard \ls1\ilvl0\li0\sa277\fs21\f3 S \fs21\f1 is the empty string, \par\li0\sa0\fs21\f3 S \fs21\f5 = \fs21\f3 A\fs21 B \fs21\f1 and both \fs21\f3 A \fs21\f1 and \fs21\f3 B \fs21\f1 are balanced, \par\pard\par\pard\s7\sa92\li327\fs21\f4 \u8226 \'A5 \fs21\f3 S \fs21\f5 =(\fs21\f3 A\fs21\f5 ) \fs21\f1 or \fs21\f3 S \fs21\f5 =[\fs21\f3 A\fs21\f5 ]\fs21\f1 . \ulnone\strike0\par\pard\sa517\sl578\slmult0\fs21\f0 Input\fs21 : \fs21\f1 Theinput begins with the number \fs21\f3 t \fs21\f1 of test cases in a single line(\fs21\f3 t \fs21\f4 \u8804 \'B2 \fs21\f5 100\fs21\f1 ). Eachof the next \fs21\f3 t \fs21\f1 line\fs21 s \fs21 contains astring oflength \fs21\f3 \u8467 \'A5 \fs21\f1 (\fs21\f5 1 \fs21\f4 \u8804 \'B2 \fs21\f3 \u8467 \'A5 \fs21\f4 \u8804 \'B2 \fs21\f5 1000\fs21\f1 )formed withparenthesis and squarebrackets\fs21 . \fs21\f0 Output\fs21 : \fs21\f1 For each test case determine if the string is balanced\fs21 . \fs21\f0 Example\fs21 : \fs21 Input\fs21 : \ulnone\strike0\par\pard\s6\sa315\ri8827\sl340\slmult0\fs21\f2 ([]\fs21 ) \fs21 ()[\fs21 ] \fs21 ([)\fs21 ] \ulnone\strike0\par\pard\s8\s9\sa167\sl338\slmult0\fs21\f0 Output\fs21 : \ulnone\strike0\par\pard\s13\ri8960\sl340\slmult0\fs21\f2 YE\fs21 S \fs21 YE\fs21 S \fs21 N\fs21 O \ulnone\strike0\par\pard\s8\s6\pagebb\sa315\sl338\slmult0\fs21\f0 Input\fs21 : \fs21\f1 Theinput begins with the number \fs21\f3 t \fs21\f1 of test cases in a single line(\fs21\f3 t \fs21\f4 \u8804 \'B2 \fs21\f5 100\fs21\f1 ). Eachof the next \fs21\f3 t \fs21\f1 lines starts with a number \fs21\f3 n \fs21\f1 (\fs21\f5 1 \fs21\f4 \u8804 \'B2 \fs21\f3 n \fs21\f4 \u8804 \'B2 \fs21\f5 1000\fs21\f1 )followedbyalist of \fs21\f3 n \fs21\f1 operations. There are two types of operations that canbeperformed onanunknowndatastructure(stack orqueue): add and remove.Anadd operationis represented by a string \ldblquote \fs21\f2 add\fs21\f1 \rdblquote followed by a number \fs21\f3 m \fs21\f1 (\fs21\f5 1 \fs21\f4 \u8804 \'B2 \fs21\f3 m \fs21\f4 \u8804 \'B2 \fs21\f5 1000000\fs21\f1 )to add to the data structure. A remove operation is represented by a string \ldblquote \fs21\f2 rem\fs21\f1 \rdblquote followedby the number \fs21\f3 m \fs21\f1 (\fs21\f5 1 \fs21\f4 \u8804 \'B2 \fs21\f3 m \fs21\f4 \u8804 \'B2 \fs21\f5 1000000\fs21\f1 )removed from the data structure. \ulnone\strike0\par\pard\s8\s6\sa315\sl338\slmult0\fs21\f0 Output\fs21 : \fs21\f1 For each test casedetermine whether thedata structureis a stack or aqueue. Ifitis a stack output \ldblquote \fs21\f2 STACK\fs21\f1 \rdblquote ,ifitisaqueueoutput \ldblquote \fs21\f2 QUEUE\fs21\f1 \rdblquote ,andifitisnotpossibletoknowoutput \ldblquote \fs21\f2 UNKNOWN\fs21\f1 \rdblquote . \ulnone\strike0\par\pard\s8\s6\sa315\sl338\slmult0\fs21\f0 Example\fs21 : \ulnone\strike0\par\pard\s8\s9\sa167\sl338\slmult0\fs21 Input\fs21 : \ulnone\strike0\par\pard\s6\sa315\ri4515\sl340\slmult0\fs21\f2 4 \fs21 4 \fs21 ad\fs21 d \fs21 5 \fs21 ad\fs21 d \fs21 0 \fs21 ad\fs21 d \fs21 6 \fs21 ad\fs21 d \fs21 0 \fs21 6 \fs21 ad\fs21 d \fs21 1 \fs21 ad\fs21 d \fs21 2 \fs21 ad\fs21 d \fs21 3 \fs21 re\fs21 m \fs21 3 \fs21 re\fs21 m \fs21 2 \fs21 re\fs21 m \fs21 1 \fs21 6 \fs21 ad\fs21 d \fs21 1 \fs21 ad\fs21 d \fs21 2 \fs21 ad\fs21 d \fs21 3 \fs21 re\fs21 m \fs21 1 \fs21 re\fs21 m \fs21 2 \fs21 re\fs21 m \fs21 3 \fs21 4 \fs21 ad\fs21 d \fs21 2 \fs21 ad\fs21 d \fs21 2 \fs21 re\fs21 m \fs21 2 \fs21 re\fs21 m \fs21 2 \ulnone\strike0\par\pard\s8\s9\sa167\sl338\slmult0\fs21\f0 Output\fs21 : \ulnone\strike0\par\pard\s11\ri8440\sl338\slmult0\fs21\f2 UNKNOW\fs21 N \fs21 STAC\fs21 K \fs21 QUEU\fs21 E \fs21 UNKNOW\fs21 N \ulnone\strike0\par\pard\s6\pagebb\sa315\ri2495\sl338\slmult0\fs21\f1 Read about \i\fs21\f6 Revers\i0\i\fs21 e \i0\i\fs21 Polis\i0\i\fs21 h \i0\i\fs21 Notatio\i0\i\fs21 n \i0\fs21\f1 (RPN)at {\field{\*\fldinst {HYPERLINK "http://en.wikipedia.org/wiki/Reverse_Polish_notation"}}{\fldrslt {\fs21\f2 http://en.wikipedia.org/wiki/Reverse_Polish_notation\fs21\f1 . }}}\ulnone\strike0\par\pard\s8\s6\sa315\sl338\slmult0\fs21\f0 Input\fs21 : \fs21\f1 Theinput begins with the number \fs21\f3 t \fs21\f1 of test cases in a single line(\fs21\f3 t \fs21\f4 \u8804 \'B2 \fs21\f5 100\fs21\f1 ). Eachof the next \fs21\f3 t \fs21\f1 lines contains an RPE expression. The expression only has integer numbers and it can have any of the following binary operators: \fs21\f2 +\fs21 , \fs21 -\fs21 , \fs21 *\fs21 , \fs21 /\fs21\f1 . Thedivision isinteger division(there is no division by zero). \ulnone\strike0\par\pard\s8\s6\sa315\sl338\slmult0\fs21\f0 Output\fs21 : \fs21\f1 Foreach test caseoutputtheresult of evaluating theexpression(theresult couldbenegative). \ulnone\strike0\par\pard\s8\s6\sa315\sl338\slmult0\fs21\f0 Example\fs21 : \ulnone\strike0\par\pard\s8\s9\sa167\sl338\slmult0\fs21 Input\fs21 : \ulnone\strike0\par\pard\s11\s14\sa263\ri8440\sl338\slmult0\fs21\f2 3 \fs21 72-\fs21 3 \ulnone\strike0\par\pard\s14\sa263\fi1047\ri8180\sl300\slmult0\fs21 * \fs21 7\fs21 2 \fs21 3\fs21 \-\ulnone\strike0\par\pard\s6\sa315\fi522\ri8180\sl300\slmult0\fs21 * \fs21 38-2\fs21 / \ulnone\strike0\par\pard\s9\sa167\sl300\slmult0\fs21\f0 Output\fs21 : \ulnone\strike0\par\pard\sa790\ri9092\sl338\slmult0\fs21\f2 1\fs21 5 \fs21 1\fs21 1 \fs21 -\fs21 2 \ulnone\strike0\par\pard\plain\pghsxn16340\pgwsxn12240\margtsxn2359\margbsxn685\margrsxn1247\marglsxn1404\par\pard\s3\sa240\fs28 Submission\fs28 . \ulnone\strike0\par\pard\s8\s9\sa167\sl338\slmult0\fs21\f1 Submit a \fs21\f2 zi\fs21 p \fs21\f1 \u64257 \'DEle with the following \u64257 \'DEles: \ulnone\strike0\par\pard \ls2\ilvl0\fi-360\li360\sa276\fs21 Code \u64257 \'DEles \fs21\f2 MyLinkedList.java\fs21\f1 , \fs21\f2 MyStack\fs21\f1 , and \fs21\f2 MyQueu\fs21 e \fs21\f1 with your implementations of the data structures; and code \u64257 \'DEles \fs21\f2 MyStackTest.jav\fs21 a \fs21\f1 and \fs21\f2 MyQueueTes\fs21 t \fs21\f1 with the solution toprob\fs21 \-\fs21 lems0aand0b.(donot submittheinterface \u64257 \'DEles). \par\fi-360\li360\sa0\fs21 Four code \u64257 \'DEles \fs21\f2 Josephus.java\fs21\f1 , \fs21\f2 Balance.java\fs21\f1 , \fs21\f2 StackOrQueue.jav\fs21 a \fs21\f1 and \fs21\f2 RPNExpression.jav\fs21 a \fs21\f1 with the solutions toproblems 1,2,3,and 4, respectively\fs21 . \par\pard\par\pard\s6\sa315\fi337\ri1012\sl338\slmult0\fs21 IncludeyournameandA numberatthetop of each source \u64257 \'DEle.Namethe \fs21\f2 zi\fs21 p \fs21\f1 \u64257 \'DEle \fs21\f2 hw0\fs21 3 \fs21 firstNam\fs21 e \fs21 lastName.zip\fs21\f1 .Forexample,ifyournameisJohnSmith,namethe \u64257 \'DEle \fs21\f2 hw0\fs21 3 \fs21 Joh\fs21 n \fs21 Smith.zip\fs21\f1 . \ulnone\strike0 }